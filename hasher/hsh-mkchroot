#!/bin/sh -ef
#
# Copyright (C) 2003-2007  Dmitry V. Levin <ldv@altlinux.org>
# Copyright (C) 2007  Kirill A. Shutemov <kas@altlinux.org>
# 
# The hsh-mkchroot utility for the hasher project
#
# This file is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.
# 
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
# GNU General Public License for more details.
# 
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301, USA.
#

. hsh-sh-functions

show_help()
{
	cat <<EOF
hsh-mkchroot - create initial chroot.

Usage: $PROG [options] [<path-to-workdir>]

<path-to-workdir> must be valid writable directory.

Options:
  --hasher-priv-dir=DIR     hasher-priv directory;
  --number=NUMBER           subconfig identifier;
  --with-qemu=ARCH          copy qemu executable into the chroot .host directory;
  -q, --quiet               try to be more quiet;
  -v, --verbose             print a message for each action;
  -V, --version             print program version and exit;
  -h, --help                show this text and exit.
    
Report bugs to http://bugs.altlinux.ru/

EOF
	exit
}

TEMP=`getopt -n $PROG -o h,q,v,V -l hasher-priv-dir:,number:,with-qemu:,help,quiet,verbose,version -- "$@"` ||
	show_usage
eval set -- "$TEMP"

while :; do
	case "$1" in
		--hasher-priv-dir)
			hasher_priv_dir="$(opt_check_dir "$1" "$2")"
			shift
			;;
		--number)
			number="$(opt_check_number "$1" "$2")"
			shift
			;;
		--with-qemu)
			qemu_arch="$2"
			shift
			;;
		--) shift; break
			;;
		*) parse_common_options hsh-mkchroot "$1"
			;;
	esac
	shift
done

if [ -z "$workdir" ]; then
	# Exactly one argument.
	[ "$#" -ge 1 ] || show_usage 'Insufficient arguments.'
	[ "$#" -le 1 ] || show_usage 'Too many arguments.'
else
	# At most one argument.
	[ "$#" -le 1 ] || show_usage 'Too many arguments.'
fi

if [ "$#" -ge 1 ]; then
	set_workdir "$1"
	shift
else
	set_workdir
fi

# exists already?
[ ! -e chroot -a ! -L chroot ] ||
	Fatal "Remove $chroot first."

check_helpers

ugid1="$("$getugid1" ${number:+-$number})" ||
	Fatal "getugid1 failed."
gid1="$(printf %s "$ugid1" |cut -d: -f2)"
ugid2="$("$getugid2" ${number:+-$number})" ||
	Fatal "getugid2 failed."
gid2="$(printf %s "$ugid2" |cut -d: -f2)"

mkdir -m1775 $verbose -- chroot
cd chroot
Verbose "Changed working directory to \`$chroot'."

mkdir -m711 $verbose .host
mkdir -m755 $verbose .in dev dev/pts
chgrp "$gid1" $verbose . dev dev/pts
mkdir -m1770 $verbose .out
chgrp "$gid2" $verbose .out
Verbose 'Created directory tree.'

ln -s $verbose ../proc/self/fd dev/fd
ln -s $verbose ../proc/self/fd/0 dev/stdin
ln -s $verbose ../proc/self/fd/1 dev/stdout
ln -s $verbose ../proc/self/fd/2 dev/stderr
Verbose 'Created /dev symlinks.'

install_static_helper ash sh
install_static_helper find
install_static_helper cpio
[ -z "$qemu_arch" ] ||
	install_static_helper "qemu-$qemu_arch"
postin="$HOME/.hasher/install/post"
if [ -r "$postin" -a -x "$postin" ]; then
	install -p -m755 $verbose "$postin" .host/postin
fi
Verbose 'Installed .host programs.'

"$makedev" ${number:+-$number} "$chroot" &&
	Verbose "Created devices in \`$chroot/dev/'." ||
	Fatal 'failed to make devices.'
