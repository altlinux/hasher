#!/bin/sh -e
#
# $Id$
# Copyright (C) 2003-2005  Dmitry V. Levin <ldv@altlinux.org>
# 
# Run specified program within hasher chroot.
#
# This file is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.
# 
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
# GNU General Public License for more details.
# 
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.
#

mountpoints=
x11_forwarding=
x11_timeout=60

if [ "$0" = ./hsh-run ]; then
	. ./functions
	hasher_dir="$(/bin/pwd)"
else
	. /usr/share/hasher/functions
fi

show_help()
{
	cat <<EOF
hsh-run - run specified program within hasher chroot.

Usage: $PROG [options] <path-to-workdir> <program> [args]

<path-to-workdir> must be valid hasher directory.

Valid options are:
  --builder                 run program as builder;
  --execute=PATH            copy given script to workdir and execute it;
  --hasher-priv-dir=DIR     hasher-priv directory;
  --mountpoints=LIST        comma-separated list of mount points;
  --number=NUMBER           subconfig identifier;
  --rooter                  run program as pseudoroot;
  --save-fakeroot           save fakeroot state;
  --x11-timeout=SECONDS     how long X11 authorization will be valid;
  -x                        disable X11 forwarding;
  -X                        enable X11 forwarding;
  -Y                        enable trusted X11 forwarding;
  -q, --quiet               try to be more quiet;
  -v, --verbose             print a message for each action;
  -V, --version             print program version and exit;
  -h, --help                show this text and exit.
    
Report bugs to http://bugs.altlinux.ru/

EOF
	exit
}

TEMP=`getopt -n $PROG -o x,X,Y,h,q,v,V -l builder,execute:,hasher-priv-dir:,mountpoints:,number:,rooter,save-fakeroot,x11-timeout:,help,quiet,verbose,version -- "$@"` ||
	show_usage
eval set -- "$TEMP"

run_as_rooter=
run_script=

while :; do
	case "$1" in
		--builder) run_as_rooter=
			;;
		--execute)
			run_script="$(opt_check_read "$1" "$2")"
			shift
			;;
		--hasher-priv-dir)
			hasher_priv_dir="$(opt_check_dir "$1" "$2")"
			shift
			;;
		--mountpoints) shift; mountpoints="$1"
			;;
		--number)
			number="$(opt_check_number "$1" "$2")"
			shift
			;;
		--rooter) run_as_rooter=1
			;;
		--save-fakeroot) save_fakeroot=1
			;;
		--x11-timeout) shift; x11_timeout="$1"
			;;
		-x) x11_forwarding=
			;;
		-X) x11_forwarding=untrusted
			;;
		-Y) x11_forwarding=trusted
			;;
		--) shift; break
			;;
		*) parse_common_options hsh-run "$1"
			;;
	esac
	shift
done

# At least one argument, please.
[ "$#" -ge 1 ] || show_usage 'Insufficient arguments.'

set_workdir "$1"
shift

# Either --execute or one more argument, please.
[ "$#" -ge 1 -o -n "$run_script" ] ||
	show_usage 'Insufficient arguments.'

check_helpers
lock_workdir

prepare_x11_forwarding || x11_forwarding=

[ -z "$run_script" ] ||
	install -pm755 $verbose "$run_script" "$chroot/.host/hsh-run"

if [ -n "$run_as_rooter" ]; then
	create_entry_fakeroot_header
else
	create_entry_header
fi

cat >>"$entry" <<__EOF__
exec ${run_script:+/.host/hsh-run} $(for n; do printf %s "\"$(quote_arg "$n")\" "; done)
__EOF__

export mountpoints

if [ -n "$run_as_rooter" ]; then
	chrootuid1
else
	chrootuid2
fi

